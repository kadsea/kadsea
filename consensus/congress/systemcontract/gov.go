package systemcontract

import (
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/consensus/congress/vmcaller"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
	"math"
	"math/big"
)

const (
	govCode = "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80634fb9e9b7116100665780634fb9e9b71461012b578063c4d66de814610140578063d254b47314610153578063f851a44014610166578063fb48270c1461017e57600080fd5b8063083c6323146100a3578063158ef93e146100bf57806325dff9d1146100dc57806326782247146100f757806348cd4cb114610122575b600080fd5b6100ac60035481565b6040519081526020015b60405180910390f35b6000546100cc9060ff1681565b60405190151581526020016100b6565b600254600354604080519283526020830191909152016100b6565b60015461010a906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b6100ac60025481565b61013e6101393660046103e3565b610186565b005b61013e61014e3660046103e3565b610221565b61013e610161366004610413565b61029b565b60005461010a9061010090046001600160a01b031681565b61013e61032e565b60005461010090046001600160a01b031633146101d75760405162461bcd60e51b815260206004820152600a60248201526941646d696e206f6e6c7960b01b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517faefcaa6215f99fe8c2f605dd268ee4d23a5b596bbca026e25ce8446187f4f1ba90600090a250565b60005460ff161561026a5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016101ce565b6000805460ff196001600160a01b0390931661010002929092166001600160a81b0319909216919091176001179055565b60005461010090046001600160a01b031633146102e75760405162461bcd60e51b815260206004820152600a60248201526941646d696e206f6e6c7960b01b60448201526064016101ce565b6002829055600381905560408051838152602081018390527f36e2d65b7e07e6b81fcd59fc0f81d180066ad87baf77733260d11b34bf05cb77910160405180910390a15050565b6001546001600160a01b031633146103795760405162461bcd60e51b815260206004820152600e60248201526d4e65772061646d696e206f6e6c7960901b60448201526064016101ce565b60018054600080546001600160a01b03808416610100908102610100600160a81b0319909316929092178084556001600160a01b03199094169094556040519204909216917f7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c91a2565b6000602082840312156103f557600080fd5b81356001600160a01b038116811461040c57600080fd5b9392505050565b6000806040838503121561042657600080fd5b5050803592602090910135915056fea2646970667358221220b62fc807a9a0a858a3928ab627e134f45eb7ad07df0c56d31741d5c94ba1a31f64736f6c63430008080033"
)

var (
	govAdmin = common.HexToAddress("0xff8874f7faa64172ce56283c9b94d30d539aaec9")
)

type hardForkGov struct {
}

func (s *hardForkGov) GetName() string {
	return GOVContractName
}

func (s *hardForkGov) Update(config *params.ChainConfig, height *big.Int, state *state.StateDB) (err error) {
	contractCode := common.FromHex(govCode)

	//write code to sys contract
	state.SetCode(GOVContractAddr, contractCode)
	log.Debug("Write code to system contract account", "addr", GOVContractAddr.String(), "code", govCode)

	return
}

func (s *hardForkGov) Execute(state *state.StateDB, header *types.Header, chainContext core.ChainContext, config *params.ChainConfig) (err error) {
	// initialize v1 contract
	method := "initialize"
	data, err := GetInteractiveABI()[s.GetName()].Pack(method, govAdmin)
	if err != nil {
		log.Error("Can't pack data for initialize", "error", err)
		return err
	}

	msg := vmcaller.NewLegacyMessage(header.Coinbase, &GOVContractAddr, 0, new(big.Int), math.MaxUint64, new(big.Int), data, false)
	_, err = vmcaller.ExecuteMsg(msg, state, header, chainContext, config)

	return
}
