package systemcontract

import (
	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
)

const (
	validatorV4Code = "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063ab3b5d4b11610097578063d6eb3de111610066578063d6eb3de114610263578063e0d8ea531461026c578063ea7221a114610274578063f62af26c1461028757600080fd5b8063ab3b5d4b14610206578063be6456921461020e578063bfba503d1461021f578063c967f90f1461024857600080fd5b80633a061bd3116100d35780633a061bd3146101be57806348cd4cb1146101c75780635e7ba496146101de5780638129fc1c146101fe57600080fd5b8063158ef93e146101055780631b5e358c146101275780631e8877271461014857806332f3c17f1461015d575b600080fd5b6000546101129060ff1681565b60405190151581526020015b60405180910390f35b61013061f20081565b6040516001600160a01b03909116815260200161011e565b61015b610156366004610d81565b61029a565b005b61017061016b366004610d81565b6102fd565b60405161011e9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b61013061f10081565b6101d060015481565b60405190815260200161011e565b6101f16101ec366004610daa565b61039e565b60405161011e9190610dcc565b61015b6104e2565b6008546101d0565b6101d069021e19e0c9bab240000081565b6101d061022d366004610d81565b6001600160a01b031660009081526007602052604090205490565b610250601581565b60405161ffff909116815260200161011e565b61013061f30081565b6004546101d0565b61015b610282366004610d81565b61054e565b610130610295366004610e43565b610b2f565b3361f100146102f05760405162461bcd60e51b815260206004820152601860248201527f56616c696461746f727320636f6e7472616374206f6e6c79000000000000000060448201526064015b60405180910390fd5b6102f981610b59565b5050565b6103386040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b506001600160a01b0316600090815260036020818152604092839020835160c081018552815481526001820154928101929092526002810154938201939093529082015460608201526004820154608082015260059091015460ff16151560a082015290565b60606103aa8383610e72565b67ffffffffffffffff8111156103c2576103c2610e89565b60405190808252806020026020018201604052801561042e57816020015b61041b6040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816103e05790505b509050825b828110156104db576008818154811061044e5761044e610e9f565b60009182526020918290206040805160a081018252600590930290910180546001600160a01b03168352600181015493830193909352600283015490820152600382015460608201526004909101546080820152826104ad8684610e72565b815181106104bd576104bd610e9f565b602002602001018190525080806104d390610eb5565b915050610433565b5092915050565b60005460ff161561052b5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016102e7565b600280546001600160a01b03191661f1001790556000805460ff19166001179055565b33411461058a5760405162461bcd60e51b815260206004820152600a6024820152694d696e6572206f6e6c7960b01b60448201526064016102e7565b60005460ff166105cb5760405162461bcd60e51b815260206004820152600c60248201526b139bdd081a5b9a5d081e595d60a21b60448201526064016102e7565b4360009081526005602052604090205460ff161561061e5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c1d5b9a5cda195960821b60448201526064016102e7565b436000908152600560208181526040808420805460ff191660011790556001600160a01b03851684526003909152909120015460ff166106c657600480546001600160a01b038316600081815260036020526040812060018082018590558085019095557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90930180546001600160a01b0319168317905552600501805460ff191690911790555b6001600160a01b03811660009081526003602052604081208054916106ea83610eb5565b90915550506001600160a01b03811660009081526003602052604090205460011415610854576001600160a01b03818116600081815260036020908152604080832042600282018190556004909101849055815160a08101835285815280840185815243828501908152606083018781526080840194855260088054998952600990975294872088905560018801865594909552517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3600590960295860180546001600160a01b031916919097161790955591517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee682015590517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee7909101555b6001600160a01b03811660009081526009602052604090205460088054909190811061088257610882610e9f565b6000918252602082206003600590920201018054916108a083610eb5565b90915550506001600160a01b03811660009081526003602081905260408220018054916108cc83610eb5565b90915550506001600160a01b0381166000908152600360205260409020600201541580159061092457506001600160a01b03811660009081526003602052604090206002015462093a80906109219042610e72565b10155b15610b2c576001600160a01b038181166000818152600360205260409081902069010f0cf064dd59200000600491820181905560025492516380d2dde160e01b81529182019390935260248101839052919216906380d2dde190604401600060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b505050506001600160a01b0382166000908152600960205260409020546008805483929081106109e1576109e1610e9f565b90600052602060002090600502016001018190555043600860096000856001600160a01b03166001600160a01b031681526020019081526020016000205481548110610a2f57610a2f610e9f565b60009182526020808320600260059093020191909101929092556001600160a01b038416815260079091526040902054610a699082610d1b565b6001600160a01b03838116600081815260076020526040908190209390935560025492516340a141ff60e01b815260048101919091529116906340a141ff90602401600060405180830381600087803b158015610ac557600080fd5b505af1158015610ad9573d6000803e3d6000fd5b50505050610ae682610b59565b50604080518281524260208201526001600160a01b038416917f275fc6ed9b56be0a0510b84cac142c60905435f8dac675a63ea794679daa29fd910160405180910390a2505b50565b60048181548110610b3f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526003602052604081205415610b91576001600160a01b0382166000908152600360205260408120555b6001600160a01b03821660009081526003602052604090206005015460ff168015610bbd575060045415155b15610d1357600454610bd190600190610e72565b6001600160a01b03831660009081526003602052604090206001015414610ca1576004805460009190610c0690600190610e72565b81548110610c1657610c16610e9f565b60009182526020808320909101546001600160a01b0386811684526003909252604090922060010154600480549290931693508392918110610c5a57610c5a610e9f565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558583168252600390526040808220600190810154949093168252902001555b6004805480610cb257610cb2610ed0565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0384168252600390819052604082206001810183905560058101805460ff1916905560028101839055908101829055600401555b506001919050565b600080610d288385610ee6565b905083811015610d7a5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016102e7565b9392505050565b600060208284031215610d9357600080fd5b81356001600160a01b0381168114610d7a57600080fd5b60008060408385031215610dbd57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015610e3657815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101610de9565b5091979650505050505050565b600060208284031215610e5557600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610e8457610e84610e5c565b500390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ec957610ec9610e5c565b5060010190565b634e487b7160e01b600052603160045260246000fd5b60008219821115610ef957610ef9610e5c565b50019056fea26469706673582212209b57e2dd0b92862f0236d710a1b7fc2d760f6987729b48eaf265922c789372ec64736f6c63430008080033"
)

type hardForkValidatorsV4 struct {
}

func (s *hardForkValidatorsV4) GetName() string {
	return ValidatorsV2ContractName
}

func (s *hardForkValidatorsV4) Update(config *params.ChainConfig, height *big.Int, state *state.StateDB) (err error) {
	contractCode := common.FromHex(validatorV4Code)

	//write code to sys contract
	state.SetCode(ValidatorsV2ContractAddr, contractCode)
	log.Debug("Write code to system contract account", "addr", ValidatorsV2ContractAddr.String(), "code", validatorV4Code)

	return
}

func (s *hardForkValidatorsV4) Execute(state *state.StateDB, header *types.Header, chainContext core.ChainContext, config *params.ChainConfig) (err error) {

	return
}
