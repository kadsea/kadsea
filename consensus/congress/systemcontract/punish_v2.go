package systemcontract

import (
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/consensus/congress/vmcaller"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
	"math"
	"math/big"
)

const (
	punishV2Code = "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063ab3b5d4b11610097578063d6eb3de111610066578063d6eb3de114610217578063e0d8ea5314610220578063ea7221a114610228578063f62af26c1461023b57600080fd5b8063ab3b5d4b146101ba578063be645692146101c2578063bfba503d146101d3578063c967f90f146101fc57600080fd5b806332f3c17f116100d357806332f3c17f146101525780633a061bd3146101895780635e7ba496146101925780638129fc1c146101b257600080fd5b8063158ef93e146100fa5780631b5e358c1461011c5780631e8877271461013d575b600080fd5b6000546101079060ff1681565b60405190151581526020015b60405180910390f35b61012561f20081565b6040516001600160a01b039091168152602001610113565b61015061014b366004610ad3565b61024e565b005b61017b610160366004610ad3565b6001600160a01b031660009081526001602052604090205490565b604051908152602001610113565b61012561f10081565b6101a56101a0366004610afc565b6102b1565b6040516101139190610b1e565b6101506103d6565b60065461017b565b61017b69021e19e0c9bab240000081565b61017b6101e1366004610ad3565b6001600160a01b031660009081526005602052604090205490565b610204601581565b60405161ffff9091168152602001610113565b61012561f30081565b60025461017b565b610150610236366004610ad3565b610436565b610125610249366004610b80565b61088e565b3361f100146102a45760405162461bcd60e51b815260206004820152601860248201527f56616c696461746f727320636f6e7472616374206f6e6c79000000000000000060448201526064015b60405180910390fd5b6102ad816108b8565b5050565b60606102bd8383610baf565b67ffffffffffffffff8111156102d5576102d5610bc6565b60405190808252806020026020018201604052801561033357816020015b610320604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816102f35790505b509050825b828110156103cf576006818154811061035357610353610bdc565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015491810191909152826103a18684610baf565b815181106103b1576103b1610bdc565b602002602001018190525080806103c790610bf2565b915050610338565b5092915050565b60005460ff161561041f5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161029b565b600080546001600160a81b03191662f10001179055565b3341146104725760405162461bcd60e51b815260206004820152600a6024820152694d696e6572206f6e6c7960b01b604482015260640161029b565b60005460ff166104b35760405162461bcd60e51b815260206004820152600c60248201526b139bdd081a5b9a5d081e595d60a21b604482015260640161029b565b4360009081526003602052604090205460ff16156105065760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c1d5b9a5cda195960821b604482015260640161029b565b436000908152600360208181526040808420805460ff191660019081179091556001600160a01b0386168552909152909120015460ff166105b157600280546001600160a01b038316600081815260016020819052604082208082018590558185019095557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180546001600160a01b03191683179055526003909101805460ff191690911790555b6001600160a01b03811660009081526001602052604081208054916105d583610bf2565b90915550506001600160a01b038116600090815260016020819052604090912054141561061c576001600160a01b0381166000908152600160205260409020426002909101555b6001600160a01b0381166000908152600160205260409020600201541580159061066f57506001600160a01b03811660009081526001602052604090206002015462093a809061066c9042610baf565b10155b1561088b576000546040516380d2dde160e01b81526001600160a01b03838116600483015269010f0cf064dd592000006024830181905292610100900416906380d2dde190604401600060405180830381600087803b1580156106d157600080fd5b505af11580156106e5573d6000803e3d6000fd5b5050604080516060810182526001600160a01b0386811680835260208084018881524385870190815260068054600181018255600091825287517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600390920291820180546001600160a01b031916919098161790965591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40860155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41909401939093559082526005905291909120549092506107c5915083610a6d565b6001600160a01b03848116600081815260056020526040808220949094555492516340a141ff60e01b8152600481019190915261010090920416906340a141ff90602401600060405180830381600087803b15801561082357600080fd5b505af1158015610837573d6000803e3d6000fd5b50505050610844836108b8565b50604080518381524260208201526001600160a01b038516917f275fc6ed9b56be0a0510b84cac142c60905435f8dac675a63ea794679daa29fd910160405180910390a250505b50565b6002818154811061089e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b038116600090815260016020526040812054156108f0576001600160a01b0382166000908152600160205260408120555b6001600160a01b03821660009081526001602052604090206003015460ff16801561091c575060025415155b15610a655760025461093090600190610baf565b6001600160a01b0383166000908152600160208190526040909120015414610a0157600280546000919061096690600190610baf565b8154811061097657610976610bdc565b60009182526020808320909101546001600160a01b03868116845260019283905260409093209091015460028054939092169350839281106109ba576109ba610bdc565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558583168252600190819052604080832082015494909316825291902001555b6002805480610a1257610a12610c0d565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03841682526001908190526040822090810182905560038101805460ff19169055600201555b506001919050565b600080610a7a8385610c23565b905083811015610acc5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161029b565b9392505050565b600060208284031215610ae557600080fd5b81356001600160a01b0381168114610acc57600080fd5b60008060408385031215610b0f57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015610b7357815180516001600160a01b0316855286810151878601528501518585015260609093019290850190600101610b3b565b5091979650505050505050565b600060208284031215610b9257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610bc157610bc1610b99565b500390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610c0657610c06610b99565b5060010190565b634e487b7160e01b600052603160045260246000fd5b60008219821115610c3657610c36610b99565b50019056fea2646970667358221220ae112a6eef5cf01b2429e9ae17c12dea2ed64d1eb2e48501ab89c73d0ae8e96264736f6c63430008080033"
)

type hardForkPunishV2 struct {
}

func (s *hardForkPunishV2) GetName() string {
	return PunishV2ContractName
}

func (s *hardForkPunishV2) Update(config *params.ChainConfig, height *big.Int, state *state.StateDB) (err error) {
	contractCode := common.FromHex(punishV2Code)

	//write code to sys contract
	state.SetCode(PunishV2ContractAddr, contractCode)
	log.Debug("Write code to system contract account", "addr", PunishV2ContractAddr.String(), "code", punishV2Code)

	return
}

func (s *hardForkPunishV2) Execute(state *state.StateDB, header *types.Header, chainContext core.ChainContext, config *params.ChainConfig) (err error) {
	// initialize v1 contract
	method := "initialize"
	data, err := GetInteractiveABI()[s.GetName()].Pack(method)
	if err != nil {
		log.Error("Can't pack data for initialize", "error", err)
		return err
	}

	msg := vmcaller.NewLegacyMessage(header.Coinbase, &PunishV2ContractAddr, 0, new(big.Int), math.MaxUint64, new(big.Int), data, false)
	_, err = vmcaller.ExecuteMsg(msg, state, header, chainContext, config)

	return
}
