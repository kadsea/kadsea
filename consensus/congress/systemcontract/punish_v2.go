package systemcontract

import (
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/consensus/congress/vmcaller"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
	"math"
	"math/big"
)

const (
	punishV2Code = "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063ab3b5d4b11610097578063d6eb3de111610066578063d6eb3de11461024b578063e0d8ea5314610254578063ea7221a11461025c578063f62af26c1461026f57600080fd5b8063ab3b5d4b146101e4578063be645692146101f6578063bfba503d14610207578063c967f90f1461023057600080fd5b806332f3c17f116100d357806332f3c17f146101525780633a061bd3146101b35780635e7ba496146101bc5780638129fc1c146101dc57600080fd5b8063158ef93e146100fa5780631b5e358c1461011c5780631e8877271461013d575b600080fd5b6000546101079060ff1681565b60405190151581526020015b60405180910390f35b61012561f20081565b6040516001600160a01b039091168152602001610113565b61015061014b366004610d64565b610282565b005b610165610160366004610d64565b6102e5565b6040516101139190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b61012561f10081565b6101cf6101ca366004610d8d565b610386565b6040516101139190610daf565b6101506104ca565b6006545b604051908152602001610113565b6101e869021e19e0c9bab240000081565b6101e8610215366004610d64565b6001600160a01b031660009081526005602052604090205490565b610238601581565b60405161ffff9091168152602001610113565b61012561f30081565b6002546101e8565b61015061026a366004610d64565b61052a565b61012561027d366004610e26565b610b11565b3361f100146102d85760405162461bcd60e51b815260206004820152601860248201527f56616c696461746f727320636f6e7472616374206f6e6c79000000000000000060448201526064015b60405180910390fd5b6102e181610b3b565b5050565b6103206040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b506001600160a01b0316600090815260016020818152604092839020835160c081018552815481529281015491830191909152600281015492820192909252600382015460608201526004820154608082015260059091015460ff16151560a082015290565b60606103928383610e55565b67ffffffffffffffff8111156103aa576103aa610e6c565b60405190808252806020026020018201604052801561041657816020015b6104036040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816103c85790505b509050825b828110156104c3576006818154811061043657610436610e82565b60009182526020918290206040805160a081018252600590930290910180546001600160a01b03168352600181015493830193909352600283015490820152600382015460608201526004909101546080820152826104958684610e55565b815181106104a5576104a5610e82565b602002602001018190525080806104bb90610e98565b91505061041b565b5092915050565b60005460ff16156105135760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016102cf565b600080546001600160a81b03191662f10001179055565b3341146105665760405162461bcd60e51b815260206004820152600a6024820152694d696e6572206f6e6c7960b01b60448201526064016102cf565b60005460ff166105a75760405162461bcd60e51b815260206004820152600c60248201526b139bdd081a5b9a5d081e595d60a21b60448201526064016102cf565b4360009081526003602052604090205460ff16156105fa5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c1d5b9a5cda195960821b60448201526064016102cf565b436000908152600360209081526040808320805460ff191660019081179091556001600160a01b038516845290915290206005015460ff166106a657600280546001600160a01b038316600081815260016020819052604082208082018590558185019095557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180546001600160a01b03191683179055526005909101805460ff191690911790555b6001600160a01b03811660009081526001602052604081208054916106ca83610e98565b90915550506001600160a01b0381166000908152600160208190526040909120541415610835576001600160a01b03818116600081815260016020818152604080842042600282018190556004909101859055815160a081018352868152808401868152438285019081526060830188815260808401948552600680549a8a52600790975294882089905595880185559390955293517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600590960295860180546001600160a01b0319169190971617909555517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40840155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4183015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4282015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d43909101555b6001600160a01b03811660009081526007602052604090205460068054909190811061086357610863610e82565b60009182526020822060036005909202010180549161088183610e98565b90915550506001600160a01b03811660009081526001602052604081206003018054916108ad83610e98565b90915550506001600160a01b0381166000908152600160205260409020600201541580159061090557506001600160a01b03811660009081526001602052604090206002015462093a80906109029042610e55565b10155b15610b0e576001600160a01b0381811660008181526001602052604080822069010f0cf064dd592000006004918201819055925491516380d2dde160e01b81529081019390935260248301829052909261010090910416906380d2dde190604401600060405180830381600087803b15801561098057600080fd5b505af1158015610994573d6000803e3d6000fd5b505050506001600160a01b0382166000908152600760205260409020546006805483929081106109c6576109c6610e82565b90600052602060002090600502016001018190555043600660076000856001600160a01b03166001600160a01b031681526020019081526020016000205481548110610a1457610a14610e82565b60009182526020808320600592830201600201939093556001600160a01b03851682529091526040902054610a499082610cfe565b6001600160a01b03838116600081815260056020526040808220949094555492516340a141ff60e01b8152600481019190915261010090920416906340a141ff90602401600060405180830381600087803b158015610aa757600080fd5b505af1158015610abb573d6000803e3d6000fd5b50505050610ac882610b3b565b50604080518281524260208201526001600160a01b038416917f275fc6ed9b56be0a0510b84cac142c60905435f8dac675a63ea794679daa29fd910160405180910390a2505b50565b60028181548110610b2157600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526001602052604081205415610b73576001600160a01b0382166000908152600160205260408120555b6001600160a01b03821660009081526001602052604090206005015460ff168015610b9f575060025415155b15610cf657600254610bb390600190610e55565b6001600160a01b0383166000908152600160208190526040909120015414610c84576002805460009190610be990600190610e55565b81548110610bf957610bf9610e82565b60009182526020808320909101546001600160a01b0386811684526001928390526040909320909101546002805493909216935083928110610c3d57610c3d610e82565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558583168252600190819052604080832082015494909316825291902001555b6002805480610c9557610c95610eb3565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03841682526001908190526040822090810182905560058101805460ff191690556002810182905560038101829055600401555b506001919050565b600080610d0b8385610ec9565b905083811015610d5d5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016102cf565b9392505050565b600060208284031215610d7657600080fd5b81356001600160a01b0381168114610d5d57600080fd5b60008060408385031215610da057600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015610e1957815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101610dcc565b5091979650505050505050565b600060208284031215610e3857600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610e6757610e67610e3f565b500390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610eac57610eac610e3f565b5060010190565b634e487b7160e01b600052603160045260246000fd5b60008219821115610edc57610edc610e3f565b50019056fea2646970667358221220f32a1c0f9f889c44f01707c6c10b37c540f5e2e216b718fd80f3841a19bb32bd64736f6c63430008080033"
)

type hardForkPunishV2 struct {
}

func (s *hardForkPunishV2) GetName() string {
	return PunishV2ContractName
}

func (s *hardForkPunishV2) Update(config *params.ChainConfig, height *big.Int, state *state.StateDB) (err error) {
	contractCode := common.FromHex(punishV2Code)

	//write code to sys contract
	state.SetCode(PunishV2ContractAddr, contractCode)
	log.Debug("Write code to system contract account", "addr", PunishV2ContractAddr.String(), "code", punishV2Code)

	return
}

func (s *hardForkPunishV2) Execute(state *state.StateDB, header *types.Header, chainContext core.ChainContext, config *params.ChainConfig) (err error) {
	// initialize v1 contract
	method := "initialize"
	data, err := GetInteractiveABI()[s.GetName()].Pack(method)
	if err != nil {
		log.Error("Can't pack data for initialize", "error", err)
		return err
	}

	msg := vmcaller.NewLegacyMessage(header.Coinbase, &PunishV2ContractAddr, 0, new(big.Int), math.MaxUint64, new(big.Int), data, false)
	_, err = vmcaller.ExecuteMsg(msg, state, header, chainContext, config)

	return
}
